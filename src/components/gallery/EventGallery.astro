---
interface Props {
  images: string[];
}

const { images } = Astro.props;
---

<div class="fixed inset-0 bg-black bg-opacity-75 hidden" id="galleryModal">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-lg max-w-4xl w-full">
      <div class="p-4 border-b flex justify-between items-center">
        <h3 class="text-xl font-semibold">Galer√≠a de fotos</h3>
        <button class="text-gray-500 hover:text-gray-700" id="closeGallery">
          <span class="sr-only">Cerrar</span>
          <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="p-4 grid grid-cols-2 md:grid-cols-3 gap-4">
        {images.map((image) => (
          <img src={image} alt="" class="w-full h-40 object-cover rounded" />
        ))}
      </div>
    </div>
  </div>
</div>

<script>
  const modal = document.querySelector<HTMLDivElement>('#galleryModal');
  const closeButton = document.querySelector<HTMLButtonElement>('#closeGallery');

  if (modal && closeButton) {
    closeButton.addEventListener('click', () => {
      modal.classList.add('hidden');
    });

    document.addEventListener('keydown', (e: KeyboardEvent) => {
      if (e.key === 'Escape') {
        modal.classList.add('hidden');
      }
    });
  }
</script>